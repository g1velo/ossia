- name: setting  /var to 500M
  aix_filesystem:
    filesystem: /var
    size: 512M
    state: present
- name: Running cfgmgr to discover new devices
  aix_devices:
    device: all
    state: available
- name: Changes /tmp to 3G size
  aix_filesystem:
    filesystem: /tmp
    size: 3G
    state: present
- name: copy /etc/profile
  copy:
    src: ../files/profile
    dest: /etc/profile
    mode : '0555'
    owner: bin
    group: bin
#- name: Adding current key
   #authorized_key:
    #user: root
    #state: present
    #key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
- name: copy netsvc.conf for name resolution
  copy:
    src: ../files/resolv.conf
    dest: /etc/resolv.conf
    mode : '0664'
    owner: root
    group: system
- name: setting ulimit
  copy:
    src: ../files/limits
    dest: /etc/security/limits
    mode : '0640'
    owner: root
    group: security
- name : install zip yum
  yum:
    name: unzip
    state: latest
  ignore_errors: yes
- name: setting DNS order
  copy:
    src: ../files/netsvc.conf
    dest: /etc/netsvc.conf
    mode : '0664'
    owner: root
    group: system
- name: Checking /etc/hosts for local IP
  command: "grep {{ ansible_default_ipv4.address }} /etc/hosts"
  register: IP_present
  when: ansible_default_ipv4 is defined
  changed_when: IP_present.rc == 1
  failed_when: IP_present.rc > 2
  tags: hosts_basic
- block:
  - name: Getting real hostname
    command: hostname
    register: real_hostname
  - debug:
      msg: real_hostname "{{ real_hostname.stdout }}" ansible_hostname  "{{ ansible_hostname }}"
  - name: create hostname_line
    set_fact:
      hostname_line: "{{ ansible_hostname }} {{ real_hostname.stdout }}"
    when:
      - real_hostname.stdout is defined
      - real_hostname.stdout != ansible_hostname
  - name: create hostname_line
    set_fact:
      hostname_line: "{{ ansible_hostname }} "
    when:
      - real_hostname.stdout is defined
      - real_hostname.stdout == ansible_hostname
  #- debug:
      #msg: "{{ hostname_line }}"
  - name: setting uname 
    shell: uname -S  "{{ ansible_hostname }} "
  - name: Resolve hostname in /etc/hosts
    lineinfile:
      dest: '/etc/hosts'
  #    regexp: '.*{{ ansible_hostname }} *$'
      regexp: '^{{ ansible_default_ipv4.address }}.*'
      insertafter: '^127.0.0.1 .*localhost*'
      #line: "{{ ansible_default_ipv4.address }} {{ real_hostname }}"
      line: "{{ ansible_default_ipv4.address }} {{ hostname_line }}"
      state: present
      backup: True
    when: ansible_default_ipv4.address is defined
    become: True
  when:
    - IP_present.rc == 1
  tags: hosts_basic
